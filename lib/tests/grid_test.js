// Generated by CoffeeScript 1.6.2
(function() {
  var Grid, array2d, buf, chkGetNeighbors, data, fixture, grid, height, path, syncfinder_astar, width, zlib;

  Grid = require("../grid");

  fixture = require("./fixture");

  zlib = require('zlib');

  syncfinder_astar = require("../syncfinder_astar");

  chkGetNeighbors = function(width, height, grid) {
    var neighbors, x, y, _i, _j;

    console.log("[chkGetNeighbors] width:" + width + ", height:" + height + ", grid:" + grid);
    for (y = _i = 0; 0 <= height ? _i < height : _i > height; y = 0 <= height ? ++_i : --_i) {
      for (x = _j = 0; 0 <= width ? _j < width : _j > width; x = 0 <= width ? ++_j : --_j) {
        neighbors = grid.getNeighbors(x, y);
        console.log("neighbors@x:" + x + ", y:" + y + ", neighbors:" + neighbors + ", " + (grid.toString(x << 16 | y, null, neighbors)));
      }
    }
  };

  array2d = [[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 0], [1, 0, 0]];

  width = 3;

  height = 5;

  buf = Grid.bytesFrom2DArray(width, height, array2d);

  grid = new Grid(width, height, buf);

  path = syncfinder_astar.findPath(1, 0, 1, 4, grid);

  console.log("path:" + path);

  return;

  data = fixture[378];

  console.dir(data);

  zlib.inflate(new Buffer(data['blockdata'], 'base64'), function(err, buf) {
    if (err != null) {
      throw "FATAL...fail to inflate scene asset json";
      return;
    }
    grid = new Grid(data.width, data.height, buf);
    console.log("grid2: " + grid);
  });

  return;

}).call(this);
